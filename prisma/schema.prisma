datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  createdAt     DateTime        @default(now())
  bankStatments BankStatement[]
}

model Year {
  yearNumber Int         @id
  months     YearMonth[]
}

model Month {
  numeric Int         @id
  month   MonthName   @unique
  years   YearMonth[]
}

model YearMonth {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  month         Month           @relation(fields: [monthId], references: [numeric])
  monthId       Int
  year          Year            @relation(fields: [yearId], references: [yearNumber])
  yearId        Int
  bankStatments BankStatement[]

  @@unique([yearId, monthId])
}

model Bank {
  id            Int             @id @default(autoincrement())
  name          String
  balance       Float
  expenses      Expense[]
  bankStatments BankStatement[]
}

model Debit {
  id       Int       @id @default(autoincrement())
  balance  Float
  expenses Expense[]
}

model Expense {
  id            Int             @id @default(autoincrement())
  name          String?
  description   String?
  total         Float
  expenseDate   DateTime
  createdAt     DateTime        @default(now())
  debitId       Int
  bankId        Int
  debit         Debit           @relation(fields: [debitId], references: [id])
  bank          Bank            @relation(fields: [bankId], references: [id])
  bankStatments BankStatement[]
}

model BankStatement {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  salaryId      Int
  salary        Salary       @relation(fields: [salaryId], references: [id])
  extraIncomeId Int?
  extraIncome   ExtraIncome? @relation(fields: [extraIncomeId], references: [id])
  userId        Int?
  user          User?        @relation(fields: [userId], references: [id])
  expenseId     Int?
  expense       Expense?     @relation(fields: [expenseId], references: [id])
  yearMonthId   Int
  yearMonth     YearMonth    @relation(fields: [yearMonthId], references: [id])
  balanceTotal  Float
  balanceReal   Float
  Bank          Bank?        @relation(fields: [bankId], references: [id])
  bankId        Int?
}

model Salary {
  id            Int             @id @default(autoincrement())
  amount        Float
  createdAt     DateTime        @default(now())
  bankStatments BankStatement[]
}

model ExtraIncome {
  id            Int             @id @default(autoincrement())
  name          String?
  amount        Float
  createdAt     DateTime        @default(now())
  bankStatments BankStatement[]
}

enum MonthName {
  January
  February
  March
  April
  May
  June
  July
  August
  September
  October
  November
  December
}

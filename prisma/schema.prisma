datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  createdAt     DateTime        @default(now())
  bankStatments BankStatement[]
}

model Year {
  yearNumber Int         @id
  months     YearMonth[]
}

model Month {
  numeric Int         @id
  month   MonthName   @unique
  years   YearMonth[]
}

model YearMonth {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  month         Month           @relation(fields: [monthId], references: [numeric])
  monthId       Int
  year          Year            @relation(fields: [yearId], references: [yearNumber])
  yearId        Int
  bankStatments BankStatement[]

  @@unique([yearId, monthId])
}

model Bank {
  id       Int       @id @default(autoincrement())
  name     String
  bankBankStatements BankBankStatement[]
}

model Expense {
  id              Int           @id @default(autoincrement())
  name            String?
  description     String?
  total           Float
  expenseDate     DateTime      @default(now())
  createdAt       DateTime      @default(now())
  bankBankStatementId          Int?
  bankBankStatement            BankBankStatement?         @relation(fields: [bankBankStatementId], references: [id])
  bankStatementId Int
  bankStatement   BankStatement @relation(fields: [bankStatementId], references: [id])
}

model BankStatement {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  salaryId       Int
  salary         Salary       @relation(fields: [salaryId], references: [id])
  extraIncomeId  Int?
  extraIncome    ExtraIncome? @relation(fields: [extraIncomeId], references: [id])
  userId         Int?
  user           User?        @relation(fields: [userId], references: [id])
  expenseId      Int?
  expenses       Expense[]
  yearMonthId    Int
  yearMonth      YearMonth    @relation(fields: [yearMonthId], references: [id])
  balanceInitial Float
  balanceTotal   Float
  balanceReal    Float
  debitBalance   Int @default(0)
  banks BankBankStatement[] 
}

model BankBankStatement {
  id Int  @id @default(autoincrement())
  bank  Bank @relation(fields: [bankId], references: [id])
  bankId Int
  bankStatement BankStatement @relation(fields: bankStatementId, references: [id])
  bankStatementId Int
  expenses Expense[]

}

model Salary {
  id            Int             @id @default(autoincrement())
  amount        Float
  createdAt     DateTime        @default(now())
  bankStatments BankStatement[]
}

model ExtraIncome {
  id            Int             @id @default(autoincrement())
  name          String?
  amount        Float
  createdAt     DateTime        @default(now())
  bankStatments BankStatement[]
}

enum MonthName {
  January
  February
  March
  April
  May
  June
  July
  August
  September
  October
  November
  December
}
